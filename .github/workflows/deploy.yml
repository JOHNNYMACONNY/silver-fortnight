name: Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'
  CACHE_VERSION: v1

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          functions/package-lock.json
          
    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: |
          node_modules
          functions/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ env.CACHE_VERSION }}
        restore-keys: |
          ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-
          ${{ runner.os }}-node-
          
    - name: Install dependencies
      run: |
        npm ci --prefer-offline --no-audit --ignore-scripts
        cd functions && npm ci --prefer-offline --no-audit --ignore-scripts
        
    - name: Cache build outputs
      uses: actions/cache@v3
      with:
        path: |
          dist
          functions/lib
          functions/.tsbuildinfo
        key: ${{ runner.os }}-build-${{ github.sha }}-${{ env.CACHE_VERSION }}
        restore-keys: |
          ${{ runner.os }}-build-${{ github.ref_name }}-
          ${{ runner.os }}-build-
          
    - name: Build application
      run: npm run build:ci
      
    - name: Run tests
      run: npm run test:ci
      
    - name: Deploy to Firebase (if main branch)
      if: github.ref == 'refs/heads/main'
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        projectId: tradeya-45ede
        channelId: live